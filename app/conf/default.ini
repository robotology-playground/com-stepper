rate                    20                               # Period used by the module. Default set to 10ms
robot                   icub                            # Robot name (icubSim or icub). Set to icub by default
local                   anklesens/comStepper            # Prefix of the ports opened by the module. Set to the module name by default, i.e. balancerModule.
display_zmp             on                              #
verbose                 off                             # [on/off] Prints relevant data for debugging.
torso                   off                             # [on/off] Enables balancing using the torso to compensate for whole body angular momentum
springs                 off                             # [on/off] Uses right gains when springs have been set at the joints level
ankles_sens             on                              # [on/off] Uses F/T sensors at the ankles.
wbs_name                /wholeBodyDynamics              # Name of the wholeBodyDynamics module that is to be used by the module
display_only            off                             # [on/off] Flag whether to display computed zmp on iCubGui or on terminal if verbose is on
no_sens                 off                             # [on/off] Flag for precenting the module from reading additional sesnors (the ones not available in iCubSim)
com_position            /comStepper/com:i               # specify a port to be opened in order to read the com_position in the root reference frame
com_jacobian            /comStepper/com_jacobian:i      # specify a port to be opened in order to read the com_jacobian w.r.t the root reference frame
r2l_error               /comStepper/r2l_error:o         # specify a port to output the tracking errors on the right/left foot position and orientation
com_error               /comStepper/com_error:o         # specify a port to output the tracking errors for the COM
com_control             /comStepper/dq:o                # specify a port to output the controls  
zmp_port                /comStepper/zmp:o               # specify a port to output the controlled variable (zmp)
w0LL                   (-34.016144 -84.696655 6.462097 -1.57196 0.908203 0.447632)    # specify the wrench (force/torque) offset for the  left leg F/T sensor
w0RL                   (14.645264 -29.025452 15.287476 -0.32254 0.718872 0.011444)    # specify the wrench (force/torque) offset for the right leg F/T sensor

q0RL_both              (8.516484 3.78022 0.21978 -5.846154 -0.538462 -3.989011)    # initial configuration right leg
q0LL_both              (9.84007 0.717047 -0.228471 -8.295255 -1.959578 -0.910369)    # initial configuration left  leg
q0TO_both              (0.043956 0.043956 0.043956)                    # initial configuration torso

q0RL_left              (4.6 10.5  0.6  -2.0  2.5 -14.3)  # initial configuration right leg
q0LL_left              (9.7 -10.0 -0.4 -16.4 -1.9 10.0)   # initial configuration left  leg
q0TO_left              (0.0  12.0 0.0)                   # initial configuration torso

q0RL_right             (9.7 -10.0 -0.4 -16.4 -1.9 10.0)   # initial configuration right leg
q0LL_right             (4.6 10.5  0.6  -2.0  2.5 -14.3)  # initial configuration left  leg
q0TO_right             (0.0 -12.0 0.0)                  # initial configuration torso

njRL                   6                                # specify number of joints in the right leg
njLL                   6                                # specify number of joints in the  left leg
njTO                   3                                # specify number of joints in the     torso
r2l_jointsSwgLeg       (1 1 1 1 1 1)                    # (0/1 vector) specify the joints of the swing   leg dedicated to the right to left foot displacement controller
r2l_jointsSupLeg       (0 0 0 0 0 0)                    # (0/1 vector) specify the joints of the support leg dedicated to the right to left foot displacement controller
com_jointsTorso        (0 0 0)                          # (0/1 vector) specify the joints of the     torso dedicated to the COM controller

[SATURATIONS]
vel_sat                 60.1                             # Maximum velocity (as saturation)

[COM_GAINS]
pi_a_d_right           (0.0  -0.00   0.02)              # Desired ZMP position while in right  foot support (expressed in * right * foot coordinates): y, z coordinates only
pi_a_d_both            (0.0  -0.08   0.02)              # Desired ZMP position while in double foot support (expressed in * right * foot coordinates): y, z coordinates only
pi_c_d_left            (0.0   0.00   0.02)              # Desired ZMP position while in left   foot support (expressed in * left  * foot coordinates): y, z coordinates only

Kp_h                    0.2                            # Proportional gain for x direction of zmp controller
Kd_h                     0.0                            # Derivative gain for x direction of zmp controller
Kp_x                    0.2                            # Proportional gain for x direction of zmp controller
Kd_x                     0.0                            # Derivative gain for x direction of zmp controller
Kp_y                    0.3                            # Proportional gain for y direction of zmp controller
Kd_y                     0.0                            # Derivative gain for y direction of zmp controller

[R2L_GAINS]

Kp                       0.6                            # Proportional gain for the right to left foot displacement controller
Kd                       0.9                            # Proportional gain for the right to left foor orientation controller

